"""
Django settings for truck_booking_app project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8r02^0=@e6w&!z*jec-n#djw=%b*1!qyx!2k^+^_@=uw5cb5wn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # My custom apps:
    'booking_app',
]

# Custom User Model
AUTH_USER_MODEL = 'booking_app.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'truck_booking_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'booking_app.context_processors.auth_extras'
            ],
        },
    },
]

WSGI_APPLICATION = 'truck_booking_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'truck_booking_db',
        'USER': 'postgres',
        'PASSWORD': '1990NunoLopes',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-pt'

TIME_ZONE = 'Europe/Lisbon'

USE_I18N = True
USE_L10N = True

USE_TZ = True

# Define the languages available in your application
# The first element of the tuple is the language code,
# the second is the name that Django displays in its language selection widgets.
LANGUAGES = [
    ('en', 'English'),
    ('pt', 'PortuguÃªs'), # Portuguese
]

# Where Django will look for translation files (.po, .mo)
# This should be a list of paths to 'locale' directories
LOCALE_PATHS = [
    BASE_DIR / 'locale', # Django will look for translations in a 'locale' folder at your project root
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# This is the directory where `collectstatic` will gather all static files for deployment.
# It must be an absolute path.
STATIC_ROOT = BASE_DIR / "staticfiles"

# This tells Django where to look for additional static files that are NOT tied to a specific app.
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Default datetime format for templates when using |date:"FORMAT" filter
# This ensures consistent display of date/time across your application
DATETIME_FORMAT = "Y-m-d H:i" # Example: 2025-06-30 15:30

# Authentication Redirect URLs
# The URL name to redirect to after a user logs in successfully
LOGIN_REDIRECT_URL = 'booking_app:vehicle_list' # Redirects to the list of trucks
LOGOUT_REDIRECT_URL = '/'
# The URL name to use when a user is not authenticated but tries to access a @login_required view
LOGIN_URL = 'login' # Refers to the 'login' URL name we defined in truck_booking_app/urls.py


# --- Email Configuration ---
# For development, print emails to the console
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# You can also set a default 'from' email address for your application
DEFAULT_FROM_EMAIL = 'geral@nulopes.me'
SERVER_EMAIL = 'geral@nulopes.me' # For error reporting emails

# If you later switch to a real SMTP server, you would configure it like this:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-pt.securemail.pro' # Example for SendGrid
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'geral@nulopes.me' # Your SMTP username
EMAIL_HOST_PASSWORD = '1990NunoLopes!!' # Your SMTP password

# Media files (for user-uploaded content)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')